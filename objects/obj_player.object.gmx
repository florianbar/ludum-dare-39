<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init

hsp = 0;
vsp = 0;
move_speed = 3;
jump_speed = 7;
grav = 0.25;

can_shoot = true;

health = 100;
can_charge = false;
is_charging = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Can shoot
can_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Charging

if (is_charging)
{
    if (health &lt; 100)
    {
        health += 4;
        alarm[0] = scr_seconds(0.1);
    }
    else
    {
        health = 100;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///step

//check user input
var key_right  =  keyboard_check(ord('D'));
var key_left   = -keyboard_check(ord('A'));
var key_jump   =  keyboard_check_pressed(ord('J'));
var key_shoot  =  keyboard_check(ord('K'));
var key_charge = keyboard_check_pressed(ord('L'));
var key_charge_released = keyboard_check_released(ord('L'));


/*
 * Charging power
 */
//only charge if standing
if (can_charge and !place_free(x,y+1))
{
    if (key_charge)
    {
        is_charging = true;
        alarm[0] = 1;
        global.game_speed = 0.2;
        
        audio_play_sound(snd_recharge, 5, false);
        
        scr_shake_start();
    }
    if (key_charge_released) 
    {
        is_charging = false;
        global.game_speed = 1;
        
        if (health &lt; 100) health = 0;
        else can_charge = false;
        
        scr_shake_end();
    }
}


//prevent player from moving while charging
if (!is_charging)
{
    //moving direction
    var hdir = key_right + key_left;
    hsp = hdir * move_speed;
    if (hdir != 0) image_xscale = hdir;
    
    //jump
    if (key_jump and !place_free(x,y+1))
    {
        audio_play_sound(snd_jump, 5, false);
        vsp = -jump_speed;
    }
    
    //gravity
    vsp += grav;
    
    //shoot
    if (key_shoot and can_shoot and health &gt; 0)
    {
        audio_play_sound(snd_shoot, 5, false);
        
        var bullet_down = instance_create(x,y,obj_bullet);  
        bullet_down.vdir = 1; 
        
        var bullet_right = instance_create(x,y,obj_bullet);  
        bullet_right.hdir = 1; 
        
        var bullet_left = instance_create(x,y,obj_bullet);  
        bullet_left.hdir = -1; 
        
        can_shoot = false;
        
        if (health-20 &gt; 0)
        {
            health -= 20;    
        }
        else
        {
            health = 0;
            can_charge = true;
        }
        
        alarm[1] = room_speed * 0.25;
    }
}
 

//horizontal collision
if (!place_free(x+hsp,y)) 
{
    while (place_free(x+sign(hsp),y)) 
    {
        x += sign(hsp);
    }
    hsp = 0;
}

x += hsp;


//vertical collision
if (!place_free(x,y+vsp)) 
{
    while (place_free(x,y+sign(vsp))) 
    {
        y += sign(vsp);
    }
    vsp = 0;
}

y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>rm_gameOver</room>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
